{
  "document_metadata": {
    "document_title": "Cognitive Vulnerability Patterns",
    "document_theme": "Common Decision Biases and Pitfalls in Data Analysis",
    "version": "1.0",
    "references": [
      "Kahneman, D. & Tversky, A. (1974). Judgment under Uncertainty: Heuristics and Biases. Science, 185(4157).",
      "Slovic, P. (1972). From Shakespeare to Simon: Speculations—such as they are—on Behavioral Economics. ORI."
    ]
  },
  "categories": [
    {
      "category_name": "Bias Patterns",
      "category_description": "Common heuristics, biases, and fallacies that affect data-driven decisions.",
      "items": [
        {
          "item_name": "Hindsight",
          "vulnerability_id": 1,
          "item_description": "Overestimating how predictable an event was after it has occurred.",
          "associated_terms": ["predictable", "retrospect", "overestimate"],
          "required_frames": ["OriginalEvent", "ReconstructedVersion"],
          "supporting_frames": ["JudgmentBias", "DistortionFactor"],
          "sql_query_considerations": [
            "Compare historical data queries run before an event vs. after to see if outcomes were truly anticipated.",
            "Maintain versioned datasets to check what was ‘knowable’ at the time."
          ]
        },
        {
          "item_name": "Imaginability",
          "vulnerability_id": 2,
          "item_description": "Overestimating probability if an event can be vividly imagined.",
          "associated_terms": ["imagine", "vivid", "probable"],
          "required_frames": ["Event", "AccessibilityFactor"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Beware of focusing on easily visualized outliers in the dataset instead of typical cases (e.g., extremely high FRPM schools).",
            "Use statistical distributions (e.g., SELECT percentile values) to confirm actual event likelihood."
          ]
        },
        {
          "item_name": "Recall",
          "vulnerability_id": 3,
          "item_description": "Event frequency seems higher if instances are easily remembered.",
          "associated_terms": ["recall", "memory", "frequency"],
          "required_frames": ["Event", "Cases"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Gather actual counts or frequencies from the dataset to avoid relying on anecdotal recollections.",
            "Compare multiple time spans in SQL queries (e.g., monthly or yearly aggregates) to see if memory-based impressions match real data."
          ]
        },
        {
          "item_name": "Search",
          "vulnerability_id": 4,
          "item_description": "Events seem more frequent if they are easier to search for or retrieve.",
          "associated_terms": ["search", "strategy", "find", "retrieve"],
          "required_frames": ["Event", "ExistingApproach"],
          "supporting_frames": ["AttentionalBias", "Cognizer"],
          "sql_query_considerations": [
            "Cross-check using thorough queries (e.g., scanning across all relevant tables) instead of partial searches.",
            "Ensure index usage or table coverage doesn’t artificially highlight only certain records."
          ]
        },
        {
          "item_name": "Similarity",
          "vulnerability_id": 5,
          "item_description": "Judging likelihood by resemblance to a typical category member.",
          "associated_terms": ["representativeness", "stereotype"],
          "required_frames": ["Event", "PerceivedPattern"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Run actual distribution queries to see if the data lumps schools into typical ‘patterns.’",
            "Avoid untested assumptions that a new row matches an existing cluster just because it ‘seems similar.’"
          ]
        },
        {
          "item_name": "Testimony",
          "vulnerability_id": 6,
          "item_description": "Inaccurate reconstructions due to incomplete recall of details.",
          "associated_terms": ["witness", "inaccurate", "missing details"],
          "required_frames": ["OriginalEvent", "ReconstructedVersion"],
          "supporting_frames": ["DistortionFactor", "Attribution"],
          "sql_query_considerations": [
            "Favor direct data extraction (SELECT * from logs) over anecdotal statements about what was done or seen.",
            "Validate historical records with timestamped data if possible."
          ]
        },
        {
          "item_name": "False memory",
          "vulnerability_id": 7,
          "item_description": "Recollections of events that never occurred, creating misguided conviction.",
          "associated_terms": ["fabrication", "misinformation", "illusory event"],
          "required_frames": ["ReconstructedVersion", "InvalidConclusion"],
          "supporting_frames": ["DistortionFactor", "Cognizer"],
          "sql_query_considerations": [
            "Check system-of-record queries for contradictory evidence to ‘remembered’ data points.",
            "Establish data audits or cross-check logs that confirm actual events (e.g., real transaction timestamps)."
          ]
        },
        {
          "item_name": "Availability",
          "vulnerability_id": 8,
          "item_description": "Judging frequency/probability by how quickly examples come to mind.",
          "associated_terms": ["availability", "ease of recall", "quick recollection"],
          "required_frames": ["Event", "AccessibilityFactor"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Use full-table scans or comprehensive grouping queries to see real frequencies instead of just the easiest examples to recall.",
            "Compare small-sample anecdotal queries with the entire dataset for validation."
          ]
        },
        {
          "item_name": "Base rate",
          "vulnerability_id": 9,
          "item_description": "Ignoring overall prevalence rates in favor of specific anecdotal or vivid data.",
          "associated_terms": ["base rate", "prior probability", "overlooked"],
          "required_frames": ["Population", "JudgmentBias"],
          "supporting_frames": ["StatisticalError", "Domain"],
          "sql_query_considerations": [
            "Always compute overall proportions (e.g., total free-meal eligibility across a county) before focusing on subgroups.",
            "JOIN or aggregate at the population level to avoid ignoring crucial base rates."
          ]
        },
        {
          "item_name": "Chance",
          "vulnerability_id": 10,
          "item_description": "Mistaking random fluctuations for meaningful patterns or processes.",
          "associated_terms": ["random", "noise", "pattern"],
          "required_frames": ["ActualRandomness", "PerceivedPattern"],
          "supporting_frames": ["StatisticalError", "DistortionFactor"],
          "sql_query_considerations": [
            "Look at sufficient sample sizes or repeated measures to confirm real trends (GROUP BY time windows, for instance).",
            "Apply randomness checks or statistical significance tests outside of raw SQL if possible."
          ]
        },
        {
          "item_name": "Conjunction",
          "vulnerability_id": 11,
          "item_description": "Overestimating the likelihood of two events both happening.",
          "associated_terms": ["joint event", "overestimate", "joint probability"],
          "required_frames": ["Event", "BiasedEstimate"],
          "supporting_frames": ["JudgmentBias", "StatisticalError"],
          "sql_query_considerations": [
            "Compare joint condition counts (WHERE cond1 AND cond2) to separate probabilities (WHERE cond1) + (WHERE cond2).",
            "Be mindful that P(A and B) ≤ P(A), P(B)."
          ]
        },
        {
          "item_name": "Correlation",
          "vulnerability_id": 12,
          "item_description": "Overestimating the consistency or strength of co-occurrence.",
          "associated_terms": ["association", "co-occurrence", "misinterpretation"],
          "required_frames": ["Event", "BiasedEstimate"],
          "supporting_frames": ["PerceivedPattern", "StatisticalError"],
          "sql_query_considerations": [
            "Use aggregated queries or correlation analysis to confirm real associations (e.g., correlation coefficient if external stats are used).",
            "Beware of interpreting correlation as causation in the SQL-based results."
          ]
        },
        {
          "item_name": "Disjunction",
          "vulnerability_id": 13,
          "item_description": "Underestimating the chance of at least one event in multiple scenarios happening.",
          "associated_terms": ["either", "union of events", "overlook scenario"],
          "required_frames": ["Event", "BiasedEstimate"],
          "supporting_frames": ["JudgmentBias", "StatisticalError"],
          "sql_query_considerations": [
            "Check logical OR conditions in queries (WHERE cond1 OR cond2) to see the union’s count vs. each individually.",
            "Ensure the union of conditions is properly accounted for (avoid double-counting or ignoring overlap)."
          ]
        },
        {
          "item_name": "Sample",
          "vulnerability_id": 14,
          "item_description": "Drawing conclusions from a small or unrepresentative sample.",
          "associated_terms": ["sample size", "representativeness", "generalization"],
          "required_frames": ["Sample", "StatisticalError"],
          "supporting_frames": ["Population", "Domain"],
          "sql_query_considerations": [
            "Verify that your SELECT is large enough or uses a full table (rather than a partial subset).",
            "Document any selection filters that might limit generalizability (WHERE type='X')."
          ]
        },
        {
          "item_name": "Subset",
          "vulnerability_id": 15,
          "item_description": "Believing a subset is more probable than the larger set containing it.",
          "associated_terms": ["subset", "category mistake", "logical error"],
          "required_frames": ["Population", "BiasedEstimate"],
          "supporting_frames": ["JudgmentBias", "StatisticalError"],
          "sql_query_considerations": [
            "Compare counts (subset vs. entire set) with straightforward GROUP BY queries (subset size ≤ entire set size).",
            "Double-check logic around nested conditions (e.g., K-12 subset vs. all students)."
          ]
        },
        {
          "item_name": "Gambler’s fallacy",
          "vulnerability_id": 16,
          "item_description": "Expecting random processes to self-correct immediately.",
          "associated_terms": ["hot hand", "independent events"],
          "required_frames": ["DataSequence", "BiasedEstimate"],
          "supporting_frames": ["StatisticalError", "DistortionFactor"],
          "sql_query_considerations": [
            "Analyze sequences in time or repeated draws (SQL window functions can help).",
            "Look for genuine patterns vs. random spikes across consecutive records."
          ]
        },
        {
          "item_name": "Neglect of probability",
          "vulnerability_id": 17,
          "item_description": "Ignoring actual likelihoods, focusing on desires or salience instead.",
          "associated_terms": ["overlook risk", "likelihood ignorance"],
          "required_frames": ["BiasedEstimate", "JudgmentBias"],
          "supporting_frames": ["StatisticalError", "DistortionFactor"],
          "sql_query_considerations": [
            "Always compute probability denominators (e.g., total number of schools) when discussing risk or likelihood.",
            "Use subqueries to measure how likely a scenario is, not just how easy it is to propose."
          ]
        },
        {
          "item_name": "Data quality neglect",
          "vulnerability_id": 18,
          "item_description": "Forgetting to account for missing or flawed data when drawing conclusions.",
          "associated_terms": ["missing data", "measurement error"],
          "required_frames": ["Dataset", "QualityIssue"],
          "supporting_frames": ["StatisticalError", "AttentionalBias"],
          "sql_query_considerations": [
            "Check for NULL fields or placeholders (e.g., -1) that may distort averages or sums.",
            "Adopt explicit data-cleansing steps (e.g., WHERE value IS NOT NULL) or note potential biases if ignoring them."
          ]
        },
        {
          "item_name": "Multiple testing fallacy",
          "vulnerability_id": 19,
          "item_description": "Finding ‘significant’ results by chance after many queries/tests.",
          "associated_terms": ["p-hacking", "false positive"],
          "required_frames": ["Dataset", "StatisticalError"],
          "supporting_frames": ["Domain", "JudgmentBias"],
          "sql_query_considerations": [
            "Keep track of how many different queries are run so as not to ‘data fish’ for random significance.",
            "Apply corrections or thresholds for repeated queries or consider separate validation sets."
          ]
        },
        {
          "item_name": "Selection bias",
          "vulnerability_id": 20,
          "item_description": "Drawing conclusions from a non-representative sample or skewed data extraction.",
          "associated_terms": ["non-representative", "skewed data", "self-selection"],
          "required_frames": ["Sample", "InvalidConclusion"],
          "supporting_frames": ["Population", "StatisticalError"],
          "sql_query_considerations": [
            "Check how the dataset was filtered (e.g., only schools that voluntarily reported data?).",
            "Ensure the JOIN or WHERE conditions aren’t accidentally excluding entire subgroups."
          ]
        },
        {
          "item_name": "Completeness",
          "vulnerability_id": 21,
          "item_description": "Mistaking a partial dataset for comprehensive coverage, ignoring possible gaps.",
          "associated_terms": ["full coverage", "no gaps"],
          "required_frames": ["Dataset", "ExistingBelief"],
          "supporting_frames": ["AttentionalBias", "QualityIssue"],
          "sql_query_considerations": [
            "Perform checks like COUNT(*), compare to expected total record counts from an official source.",
            "Use outer joins or reference tables to see if rows are missing from the main dataset."
          ]
        },
        {
          "item_name": "Control",
          "vulnerability_id": 22,
          "item_description": "Illusory sense of control when a good outcome follows a poor decision.",
          "associated_terms": ["illusion of control", "lucky outcome"],
          "required_frames": ["Cognizer", "ConfidenceGap"],
          "supporting_frames": ["DistortionFactor", "JudgmentBias"],
          "sql_query_considerations": [
            "Track decision context in the data (e.g., was the policy truly effective or just correlated with a fortuitous external factor?).",
            "Use historical or comparison groups to see if success was truly linked to the decision."
          ]
        },
        {
          "item_name": "Confirmation",
          "vulnerability_id": 23,
          "item_description": "Seeking information that supports an existing belief, ignoring contradictions.",
          "associated_terms": ["preconception", "cherry-picking"],
          "required_frames": ["ExistingBelief", "SelectiveProcessing"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Check for symmetrical queries that also look for counterexamples or negative cases.",
            "Avoid only SELECTing data from tables that match prior convictions; incorporate broader sets."
          ]
        },
        {
          "item_name": "Desire",
          "vulnerability_id": 24,
          "item_description": "Overestimating the likelihood of a favorable outcome due to personal hopes.",
          "associated_terms": ["wishful thinking", "optimism bias"],
          "required_frames": ["ExistingBelief", "BiasedEstimate"],
          "supporting_frames": ["DistortionFactor", "ConfidenceGap"],
          "sql_query_considerations": [
            "Use rigorous numeric comparisons, not just queries that confirm a ‘positive scenario.’",
            "Run realistic worst-case scenario queries as well (e.g., cost analysis if the best case doesn’t happen)."
          ]
        },
        {
          "item_name": "Overconfidence",
          "vulnerability_id": 25,
          "item_description": "Excessive faith in one’s judgments or skill, leading to miscalibration.",
          "associated_terms": ["expert illusion", "hubris"],
          "required_frames": ["Cognizer", "ConfidenceGap"],
          "supporting_frames": ["AttentionalBias", "InvalidConclusion"],
          "sql_query_considerations": [
            "Cross-check queries with multiple data validations or alternate analysis paths.",
            "Compare your results with known external benchmarks or expert-run queries."
          ]
        },
        {
          "item_name": "Redundancy",
          "vulnerability_id": 26,
          "item_description": "Assuming more or repeated data automatically yields higher accuracy.",
          "associated_terms": ["repetitive data", "illusion of certainty"],
          "required_frames": ["Dataset", "ConfidenceGap"],
          "supporting_frames": ["AttentionalBias", "ExistingApproach"],
          "sql_query_considerations": [
            "Consolidate repeated records (using DISTINCT or GROUP BY) to ensure you’re not counting duplicates as new evidence.",
            "Examine data duplication or heavily correlated fields that give a false sense of ‘extra evidence.’"
          ]
        },
        {
          "item_name": "Dunning–Kruger effect",
          "vulnerability_id": 27,
          "item_description": "People with low competence overestimate their own skill due to lack of self-awareness.",
          "associated_terms": ["lack of skill", "incompetence"],
          "required_frames": ["Cognizer", "ActualCapability"],
          "supporting_frames": ["ConfidenceGap", "JudgmentBias"],
          "sql_query_considerations": [
            "Encourage code review or pair querying for novices to catch oversights.",
            "Compare queries from less-experienced vs. expert analysts to identify potential errors."
          ]
        },
        {
          "item_name": "Bias blind spot",
          "vulnerability_id": 28,
          "item_description": "Recognizing others’ biases but not one’s own.",
          "associated_terms": ["meta-bias", "self-awareness"],
          "required_frames": ["Cognizer", "JudgmentBias"],
          "supporting_frames": ["AttentionalBias", "DistortionFactor"],
          "sql_query_considerations": [
            "Adopt peer reviews or transparency in query logic so personal biases are more easily spotted by others.",
            "Document your assumptions so colleagues can check them."
          ]
        },
        {
          "item_name": "Method fixation",
          "vulnerability_id": 29,
          "item_description": "Over-relying on a familiar or preferred method when alternatives might be more appropriate.",
          "associated_terms": ["tool selection", "rigidity"],
          "required_frames": ["ExistingApproach", "DistortionFactor"],
          "supporting_frames": ["ConfidenceGap", "AttentionalBias"],
          "sql_query_considerations": [
            "Consider if your go-to query pattern (e.g., pivot or cross tab) is truly suitable or if you need a different approach (like a time-series window function).",
            "Evaluate whether other analysis engines, not just SQL, might handle the problem better."
          ]
        },
        {
          "item_name": "Tool overconfidence",
          "vulnerability_id": 30,
          "item_description": "Placing excessive trust in software or analytical tools without understanding their limits.",
          "associated_terms": ["automation bias", "black box"],
          "required_frames": ["ExistingApproach", "ConfidenceGap"],
          "supporting_frames": ["StatisticalError", "AttentionalBias"],
          "sql_query_considerations": [
            "Validate results from complex SQL or stored procedures with simpler cross-check queries.",
            "Understand how built-in functions or performance optimizations might produce unexpected results."
          ]
        },
        {
          "item_name": "Selectivity",
          "vulnerability_id": 31,
          "item_description": "Expectations bias which information is considered relevant.",
          "associated_terms": ["filtering", "information screening"],
          "required_frames": ["Event", "SelectiveProcessing"],
          "supporting_frames": ["AttentionalBias", "JudgmentBias"],
          "sql_query_considerations": [
            "Write broad queries first (SELECT *) and only then refine columns to avoid ignoring relevant data.",
            "Review all potential tables or columns that could impact the conclusion, not just the obvious ones."
          ]
        },
        {
          "item_name": "Success (self-serving bias)",
          "vulnerability_id": 32,
          "item_description": "Attributing success to personal skill and failure to external factors.",
          "associated_terms": ["luck vs. skill"],
          "required_frames": ["Attribution", "InvalidConclusion"],
          "supporting_frames": ["ConfidenceGap", "DistortionFactor"],
          "sql_query_considerations": [
            "Use reference or control groups (e.g., compare a policy group to a non-policy group) to see if success was truly a personal or policy factor.",
            "Look at long-term outcomes to reduce chance events overshadowing real skill or systemic success."
          ]
        },
        {
          "item_name": "Test (inability to test)",
          "vulnerability_id": 33,
          "item_description": "Some aspects of choice can’t be directly tested, leading to unfounded confidence in assumptions.",
          "associated_terms": ["unverifiable", "lack of evidence"],
          "required_frames": ["ExistingApproach", "InvalidConclusion"],
          "supporting_frames": ["DistortionFactor", "JudgmentBias"],
          "sql_query_considerations": [
            "Identify which parts of the query or logic have no data coverage at all (i.e., no table or columns exist for them).",
            "Document that certain assumptions remain untested or outside the scope of the dataset."
          ]
        },
        {
          "item_name": "Anchoring and adjustment",
          "vulnerability_id": 34,
          "item_description": "Relying too heavily on an initial reference point and failing to adjust sufficiently.",
          "associated_terms": ["reference point", "starting point effect"],
          "required_frames": ["InitialValue", "AdjustmentProcess"],
          "supporting_frames": ["JudgmentBias", "FinalEstimate"],
          "sql_query_considerations": [
            "Compare multiple baseline queries or initial default values to see how conclusions shift.",
            "Avoid reusing the same numeric parameter in subsequent queries without re-evaluation."
          ]
        },
        {
          "item_name": "Conservatism",
          "vulnerability_id": 35,
          "item_description": "Failing to revise beliefs adequately when presented with new evidence.",
          "associated_terms": ["underreaction", "sticky belief"],
          "required_frames": ["ExistingBelief", "NewEvidence"],
          "supporting_frames": ["JudgmentChange", "DistortionFactor"],
          "sql_query_considerations": [
            "Refresh queries with the latest data periodically (e.g., monthly updates), not just keep using old results.",
            "Compare old data vs. new data to highlight how beliefs might need updating."
          ]
        },
        {
          "item_name": "Reference",
          "vulnerability_id": 36,
          "item_description": "Establishing a reference point that is arbitrary or biased, affecting all subsequent judgments.",
          "associated_terms": ["baseline", "anchor", "arbitrary"],
          "required_frames": ["InitialValue", "DistortionFactor"],
          "supporting_frames": ["JudgmentBias", "FinalEstimate"],
          "sql_query_considerations": [
            "Check if the baseline used in queries (e.g., ‘average from last year’) is truly relevant or if it was chosen arbitrarily.",
            "Explore different reference points in separate queries to gauge the shift in results."
          ]
        },
        {
          "item_name": "Regression",
          "vulnerability_id": 37,
          "item_description": "Failing to expect that extreme outcomes often regress toward the mean on repeated trials.",
          "associated_terms": ["regression to mean", "outlier reversion"],
          "required_frames": ["BiasedEstimate", "DataSequence"],
          "supporting_frames": ["JudgmentBias", "StatisticalError"],
          "sql_query_considerations": [
            "Track repeated measures (e.g., test scores over multiple periods) to see if extremes revert.",
            "Use window functions or subqueries to compare a current period with prior periods."
          ]
        },
        {
          "item_name": "Framing",
          "vulnerability_id": 38,
          "item_description": "Decisions are influenced by how data or outcomes are presented (gain vs. loss).",
          "associated_terms": ["gain vs loss", "spin", "context effect"],
          "required_frames": ["PresentationFormat", "Content"],
          "supporting_frames": ["JudgmentBias", "DistortionFactor"],
          "sql_query_considerations": [
            "Check if queries highlight only positives or only negatives (e.g., only showing ‘pass rates’).",
            "Offer symmetrical views (both ‘success rate’ and ‘failure rate’) in the dataset output."
          ]
        },
        {
          "item_name": "Linear",
          "vulnerability_id": 39,
          "item_description": "Assuming a straight-line relationship or trend when it might be non-linear.",
          "associated_terms": ["straight-line extrapolation", "oversimplification"],
          "required_frames": ["PerceivedPattern", "InvalidConclusion"],
          "supporting_frames": ["DistortionFactor", "StatisticalError"],
          "sql_query_considerations": [
            "Look for polynomial or segmented patterns by comparing separate ranges in queries.",
            "Consider binning or piecewise checks (e.g., CASE statements) instead of a single linear slope."
          ]
        },
        {
          "item_name": "Mode",
          "vulnerability_id": 40,
          "item_description": "Presentation medium (e.g., visual vs. textual) changes how people perceive credibility or relevance.",
          "associated_terms": ["format effect", "visual vs textual"],
          "required_frames": ["PresentationFormat", "DistortionFactor"],
          "supporting_frames": ["Cognizer", "SelectiveProcessing"],
          "sql_query_considerations": [
            "Keep final data sets consistent in textual format for fairness (no special highlight in a subset).",
            "Offer standardized CSV or tabular exports to reduce undue emphasis from a flashy format."
          ]
        },
        {
          "item_name": "Order",
          "vulnerability_id": 41,
          "item_description": "The sequence in which data appears can skew attention and weighting.",
          "associated_terms": ["primacy", "recency", "sequence"],
          "required_frames": ["ItemSequence", "AttentionalBias"],
          "supporting_frames": ["Position", "DistortionFactor"],
          "sql_query_considerations": [
            "Control the ORDER BY clause so you can examine how item ordering might affect interpretation (e.g., random vs. sorted).",
            "Rotate or randomize record presentation if user-facing queries might influence subjective judgments."
          ]
        },
        {
          "item_name": "Scale",
          "vulnerability_id": 42,
          "item_description": "Changing numeric scales or units can alter perceived impact.",
          "associated_terms": ["units", "range", "perception shift"],
          "required_frames": ["Dataset", "PresentationFormat"],
          "supporting_frames": ["StatisticalError", "JudgmentBias"],
          "sql_query_considerations": [
            "Convert values to consistent units (e.g., thousands vs. millions) so the scale doesn’t mislead.",
            "Offer percentage or ratio-based queries if absolute values might be misread."
          ]
        },
        {
          "item_name": "Primacy effect",
          "vulnerability_id": 43,
          "item_description": "Disproportionate emphasis on the first items in a list or sequence.",
          "associated_terms": ["first impression", "serial position"],
          "required_frames": ["ItemSequence", "AttentionalBias"],
          "supporting_frames": ["Position", "JudgmentBias"],
          "sql_query_considerations": [
            "Shuffle or randomize the dataset order if presenting a short list of results (LIMIT N).",
            "Expose the entire set or use pagination to avoid over-focusing on the first few rows."
          ]
        },
        {
          "item_name": "Recency effect",
          "vulnerability_id": 44,
          "item_description": "Heavier weighting of the most recently presented data.",
          "associated_terms": ["last input", "recent emphasis"],
          "required_frames": ["ItemSequence", "AttentionalBias"],
          "supporting_frames": ["Position", "JudgmentBias"],
          "sql_query_considerations": [
            "Check if the ORDER BY clause is reversed or if you always look at the last rows first.",
            "Encourage reading the entire result set or summary stats instead of focusing on the bottom lines."
          ]
        },
        {
          "item_name": "Granularity illusion",
          "vulnerability_id": 45,
          "item_description": "Overly fine detail or misleading precision hides broader patterns.",
          "associated_terms": ["precision", "false detail", "aggregation"],
          "required_frames": ["PresentationFormat", "DistortionFactor"],
          "supporting_frames": ["Dataset", "JudgmentBias"],
          "sql_query_considerations": [
            "Perform consistent rounding or binning for readability, not arbitrary decimal expansions.",
            "Use aggregated or summarized queries to show important trends rather than raw micro-level detail alone."
          ]
        },
        {
          "item_name": "Attenuation",
          "vulnerability_id": 46,
          "item_description": "Discounting or ignoring uncertainty, leading to oversimplified conclusions.",
          "associated_terms": ["disregard uncertainty", "risk discount"],
          "required_frames": ["DistortionFactor", "SituationalFactors"],
          "supporting_frames": ["JudgmentBias", "ConfidenceGap"],
          "sql_query_considerations": [
            "Include margins of error or standard deviations in result sets if feasible.",
            "Label queries that rely on incomplete or uncertain data with cautionary notes."
          ]
        },
        {
          "item_name": "Complexity",
          "vulnerability_id": 47,
          "item_description": "Time pressure and info overload prompt simplistic heuristics instead of careful analysis.",
          "associated_terms": ["info overload", "heuristics"],
          "required_frames": ["SituationalFactors", "DistortionFactor"],
          "supporting_frames": ["JudgmentBias", "AttentionalBias"],
          "sql_query_considerations": [
            "Break queries into simpler, smaller parts (common table expressions or subqueries).",
            "Document the logic flow so the complexity doesn’t hide crucial steps or data points."
          ]
        },
        {
          "item_name": "Escalation",
          "vulnerability_id": 48,
          "item_description": "Continuing a failing course of action due to sunk costs.",
          "associated_terms": ["sunk cost", "continued investment"],
          "required_frames": ["ExistingApproach", "Persistence"],
          "supporting_frames": ["SituationalFactors", "DistortionFactor"],
          "sql_query_considerations": [
            "Track historical decisions in the dataset to see if repeated investment yields diminishing returns.",
            "Use queries that compare new potential alternatives, not just the same approach."
          ]
        },
        {
          "item_name": "Habit",
          "vulnerability_id": 49,
          "item_description": "Sticking with a previous method or approach purely out of familiarity.",
          "associated_terms": ["routine", "status quo"],
          "required_frames": ["ExistingApproach", "Persistence"],
          "supporting_frames": ["SituationalFactors", "Cognizer"],
          "sql_query_considerations": [
            "Explore new queries or indexing strategies that might challenge the routine approach.",
            "Compare the performance or outcomes of older methods vs. a pilot with new techniques."
          ]
        },
        {
          "item_name": "Inconsistency",
          "vulnerability_id": 50,
          "item_description": "Applying differing standards to similar cases or over time.",
          "associated_terms": ["double standard", "lack of uniformity"],
          "required_frames": ["Inconsistency", "SituationalFactors"],
          "supporting_frames": ["DistortionFactor", "JudgmentChange"],
          "sql_query_considerations": [
            "Check that the same queries or parameters are used across similar contexts, not altering them arbitrarily.",
            "Compare the logic from previous periods or parallel departments for consistency."
          ]
        },
        {
          "item_name": "Rule",
          "vulnerability_id": 51,
          "item_description": "Blindly adhering to an outdated or incorrect rule or guideline.",
          "associated_terms": ["obsolete guideline", "inflexibility"],
          "required_frames": ["ExistingApproach", "InvalidConclusion"],
          "supporting_frames": ["DistortionFactor", "SituationalFactors"],
          "sql_query_considerations": [
            "Document the rationale behind all major filters or conditions to check if they remain valid.",
            "Periodically review business rules embedded in queries (like numeric thresholds) for potential updates."
          ]
        },
        {
          "item_name": "Fundamental attribution error",
          "vulnerability_id": 52,
          "item_description": "Overemphasizing internal traits to explain others’ behavior while ignoring situational factors.",
          "associated_terms": ["others' behavior", "situational neglect"],
          "required_frames": ["ObservedBehavior", "Attribution"],
          "supporting_frames": ["DistortionFactor", "JudgmentBias"],
          "sql_query_considerations": [
            "Gather broader context columns (e.g., environment, location, resource constraints) instead of only personal attributes.",
            "JOIN with external or contextual data to see if ‘situational’ aspects explain behavior."
          ]
        },
        {
          "item_name": "Bandwagon effect",
          "vulnerability_id": 53,
          "item_description": "Following the crowd’s choices or opinions due to popularity.",
          "associated_terms": ["herd behavior", "social influence"],
          "required_frames": ["ObservedBehavior", "SituationalFactors"],
          "supporting_frames": ["Attribution", "AttentionalBias"],
          "sql_query_considerations": [
            "Check data for group-level trends vs. individual patterns to see if the shift is purely collective imitation.",
            "Consider whether an anomaly is truly a beneficial trend or just social contagion in the data."
          ]
        }
      ]
    }
  ]
}
